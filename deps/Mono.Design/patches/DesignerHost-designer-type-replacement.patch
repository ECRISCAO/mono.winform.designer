--- class/System.Design/System.ComponentModel.Design/DesignerHost.cs	2008-07-10 16:24:08.000000000 +0100
+++ class/System.Design/System.ComponentModel.Design/DesignerHost.cs	2008-06-28 02:26:15.000000000 +0100
@@ -322,9 +324,7 @@
 				if (designerAttr != null &&
 					(designerBaseType.FullName == designerAttr.DesignerBaseTypeName ||
 					designerBaseType.AssemblyQualifiedName == designerAttr.DesignerBaseTypeName)) {
-					Type type = Type.GetType (designerAttr.DesignerTypeName);
-					if (type == null && designerBaseType == typeof (IRootDesigner))
-						type = typeof (System.Windows.Forms.Design.DocumentDesigner);
+					Type type = this.GetDesignerType (designerAttr.DesignerTypeName);
 					if (type != null)
 						instance = (IDesigner) Activator.CreateInstance (type);
 					break;
@@ -340,9 +340,10 @@
 						if (designerAttr != null && 
 							(designerBaseType.FullName == designerAttr.DesignerBaseTypeName ||
 							designerBaseType.AssemblyQualifiedName == designerAttr.DesignerBaseTypeName)) {
-							Type type = Type.GetType (designerAttr.DesignerTypeName);
-							if (type != null)
+							Type type = this.GetDesignerType (designerAttr.DesignerTypeName);
+							if (type != null) {
 								instance = (IDesigner) Activator.CreateInstance (type);
+							}
 							break;
 						}
 					}
@@ -353,6 +354,39 @@
 			return instance;
 		}
 
+		// reroutes types to Mono.Design temoprary for testing
+		private Type GetDesignerType (string name)
+		{
+			Type type = null;
+			if (name.StartsWith ("System.Windows.Forms.Design.ControlDesigner"))
+				type = typeof (Mono.Design.ControlDesigner);
+			else if (name.StartsWith ("System.Windows.Forms.Design.SplitContainerDesigner"))
+				type = typeof (Mono.Design.SplitContainerDesigner);
+			else if (name.StartsWith ("System.Windows.Forms.Design.ParentControlDesigner"))
+				type = typeof (Mono.Design.ParentControlDesigner);
+			else if (name.StartsWith ("System.Windows.Forms.Design.PanelDesigner"))
+				type = typeof (Mono.Design.PanelDesigner);
+			else if (name.StartsWith ("System.Windows.Forms.Design.DocumentDesigner"))
+				type = typeof (Mono.Design.DocumentDesigner);
+			else if (name.StartsWith ("System.Windows.Forms.Design.UserControlDocumentDesigner"))
+				type = typeof (Mono.Design.DocumentDesigner);
+			else if (name.StartsWith ("System.Windows.Forms.Design.FormDocumentDesigner"))
+				type = typeof (Mono.Design.FormDocumentDesigner);
+			else if (name.StartsWith ("System.Windows.Forms.Design.ScrollableControlDesigner"))
+				type = typeof (Mono.Design.ScrollableControlDesigner);
+			else if (name.StartsWith ("System.ComponentModel.Design.ComponentDesigner"))
+				type = typeof (Mono.Design.ComponentDesigner);
+			else if (name.StartsWith ("Mono.Design"))
+				type = Type.GetType (name);
+
+			if (type != null)
+				Console.WriteLine ("type " + type.FullName +" replaced " + name);
+			//else
+				//Console.WriteLine ("type not found: " + name);
+
+			return type;
+		}
+
 		public void DestroyComponent (IComponent component)
 		{
 			if (component.Site != null && component.Site.Container == this) {
